{"remainingRequest":"/home/u/Desktop/group1-rw334-project-2/frontend/node_modules/thread-loader/dist/cjs.js!/home/u/Desktop/group1-rw334-project-2/frontend/node_modules/babel-loader/lib/index.js!/home/u/Desktop/group1-rw334-project-2/frontend/src/store/modules/posts.js","dependencies":[{"path":"/home/u/Desktop/group1-rw334-project-2/frontend/src/store/modules/posts.js","mtime":1591361619944},{"path":"/home/u/Desktop/group1-rw334-project-2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/u/Desktop/group1-rw334-project-2/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/u/Desktop/group1-rw334-project-2/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvdS9EZXNrdG9wL2dyb3VwMS1ydzMzNC1wcm9qZWN0LTIvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwp2YXIgc3RhdGUgPSB7CiAgcG9zdHM6IFtdCn07CnZhciBnZXR0ZXJzID0gewogIGFsbFBvc3RzOiBmdW5jdGlvbiBhbGxQb3N0cyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnBvc3RzOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgZmV0Y2hQb3N0czogZnVuY3Rpb24gZmV0Y2hQb3N0cyhfcmVmKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoImh0dHA6Ly8xMjcuMC4wLjE6ODAwMC9hcGkvUG9zdC8iKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgLy8gVE9ETzogc2V0dXAgYmFja2VuZCB0byB3b3JrIHdpdGggdGhpcyBwYXJ0CiAgICAgICAgICAgICAgY29tbWl0KCdzZXRQb3N0cycsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgYWRkUG9zdDogZnVuY3Rpb24gYWRkUG9zdChfcmVmMiwgX3JlZjMpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgY29tbWl0LCB1c2VySUQsIHRpdGxlLCBjb250ZW50LCBsb2NhdGlvbiwgY2F0ZWdvcnksIGdyb3VwSUQsIG5vdywgdGltZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgdXNlcklEID0gX3JlZjMudXNlcklELCB0aXRsZSA9IF9yZWYzLnRpdGxlLCBjb250ZW50ID0gX3JlZjMuY29udGVudCwgbG9jYXRpb24gPSBfcmVmMy5sb2NhdGlvbiwgY2F0ZWdvcnkgPSBfcmVmMy5jYXRlZ29yeSwgZ3JvdXBJRCA9IF9yZWYzLmdyb3VwSUQ7CiAgICAgICAgICAgICAgLy9jb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoJ2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cycsIHsgdGl0bGUsIGJvZHkgfSk7IC8vIFRPRE86IHNldHVwIGJhY2tlbmQgdG8gd29yayB3aXRoIHRoaXMgcGFydAogICAgICAgICAgICAgIG5vdyA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgICAgdGltZSA9IG5vdy5nZXRUaW1lKCk7CiAgICAgICAgICAgICAgY29tbWl0KCdpbmNyZW1lbnRQb3N0SURzJyk7CiAgICAgICAgICAgICAgY29tbWl0KCduZXdQb3N0JywgewogICAgICAgICAgICAgICAgdXNlcklEOiB1c2VySUQsCiAgICAgICAgICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgICAgICAgICBjb250ZW50OiBjb250ZW50LAogICAgICAgICAgICAgICAgdGltZTogdGltZSwKICAgICAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbiwKICAgICAgICAgICAgICAgIGNhdGVnb3J5OiBjYXRlZ29yeSwKICAgICAgICAgICAgICAgIGdyb3VwSUQ6IGdyb3VwSUQKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgZmlsdGVyUG9zdHM6IGZ1bmN0aW9uIGZpbHRlclBvc3RzKF9yZWY0LCBlKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdCwgZmlsdGVyVHlwZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgICAgICAgICAgZmlsdGVyVHlwZSA9IGUudGFyZ2V0Lm9wdGlvbnNbZS50YXJnZXQub3B0aW9ucy5zZWxlY3RlZEluZGV4XS5pbm5lclRleHQ7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coZmlsdGVyVHlwZSk7IC8vY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoJ2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cz9fZmlsdGVyPSR7ZmlsdGVyVHlwZX0nKTsgLy8gVE9ETzogc2V0dXAgYmFja2VuZCB0byB3b3JrIHdpdGggdGhpcyBwYXJ0CgogICAgICAgICAgICAgIGNvbW1pdCgnc29ydFBvc3RzQnknLCBmaWx0ZXJUeXBlKTsKICAgICAgICAgICAgICBjb21taXQoJ3NldFBvc3RzJywgc3RhdGUucG9zdHMpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpKCk7CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIHNldFBvc3RzOiBmdW5jdGlvbiBzZXRQb3N0cyhzdGF0ZSwgcG9zdHMpIHsKICAgIHJldHVybiBzdGF0ZS5wb3N0cyA9IHBvc3RzOwogIH0sCiAgbmV3UG9zdDogZnVuY3Rpb24gbmV3UG9zdChzdGF0ZSwgX3JlZjUpIHsKICAgIHZhciB1c2VySUQgPSBfcmVmNS51c2VySUQsCiAgICAgICAgdGl0bGUgPSBfcmVmNS50aXRsZSwKICAgICAgICBjb250ZW50ID0gX3JlZjUuY29udGVudCwKICAgICAgICB0aW1lID0gX3JlZjUudGltZSwKICAgICAgICBsb2NhdGlvbiA9IF9yZWY1LmxvY2F0aW9uLAogICAgICAgIGNhdGVnb3J5ID0gX3JlZjUuY2F0ZWdvcnksCiAgICAgICAgZ3JvdXBJRCA9IF9yZWY1Lmdyb3VwSUQ7CiAgICB2YXIgcG9zdCA9IHsKICAgICAgdXNlcklkOiB1c2VySUQsCiAgICAgIHRpdGxlOiB0aXRsZSwKICAgICAgaWQ6IDEsCiAgICAgIGNvbnRlbnQ6IGNvbnRlbnQsCiAgICAgIHRpbWU6IHRpbWUsCiAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbiwKICAgICAgY2F0ZWdvcnk6IGNhdGVnb3J5LAogICAgICBncm91cGlkOiBncm91cElECiAgICB9OwogICAgc3RhdGUucG9zdHMudW5zaGlmdChwb3N0KTsKICB9LAogIGluY3JlbWVudFBvc3RJRHM6IGZ1bmN0aW9uIGluY3JlbWVudFBvc3RJRHMoc3RhdGUpIHsKICAgIHZhciBpID0gMDsKCiAgICBmb3IgKGkgPSAwOyBpIDwgc3RhdGUucG9zdHMubGVuZ3RoOyBpKyspIHsKICAgICAgc3RhdGUucG9zdHNbaV0uaWQgPSBzdGF0ZS5wb3N0c1tpXS5pZCArIDE7CiAgICB9CiAgfSwKICBzb3J0UG9zdHNCeTogZnVuY3Rpb24gc29ydFBvc3RzQnkoc3RhdGUsIGZpbHRlclR5cGUpIHsKICAgIHN3aXRjaCAoZmlsdGVyVHlwZSkgewogICAgICBjYXNlICdUaW1lJzoKICAgICAgICBjb25zb2xlLmxvZygiVG9kbzogU09SVCBCWSBUSU1FIE9OIFNFUlZFUiBTSURFIik7CiAgICAgICAgYnJlYWs7CgogICAgICBjYXNlICdMb2NhdGlvbic6CiAgICAgICAgY29uc29sZS5sb2coIlRvZG86IFNPUlQgQlkgTE9DQVRJT04gT04gU0VSVkVSIFNJREUiKTsKICAgICAgICBicmVhazsKCiAgICAgIGNhc2UgJ0NhdGVnb3J5JzoKICAgICAgICBjb25zb2xlLmxvZygiVG9kbzogU09SVCBCWSBDQVRFR09SWSBPTiBTRVJWRVIgU0lERSIpOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSAnR3JvdXAvVXNlcic6CiAgICAgICAgY29uc29sZS5sb2coIlRvZG86IFNPUlQgQlkgR1JPVVAvVVNFUiBPTiBTRVJWRVIgU0lERSIpOwogICAgICAgIGJyZWFrOwoKICAgICAgZGVmYXVsdDoKICAgICAgICBicmVhazsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/home/u/Desktop/group1-rw334-project-2/frontend/src/store/modules/posts.js"],"names":["axios","state","posts","getters","allPosts","actions","fetchPosts","commit","get","response","data","addPost","userID","title","content","location","category","groupID","now","Date","time","getTime","filterPosts","e","filterType","target","options","selectedIndex","innerText","console","log","mutations","setPosts","newPost","post","userId","id","groupid","unshift","incrementPostIDs","i","length","sortPostsBy"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst state = {\n    posts: []\n};\n\nconst getters = {\n    allPosts: (state) => state.posts\n};\n\nconst actions = {\n    async fetchPosts({ commit }) {\n        const response = await axios.get(\"http://127.0.0.1:8000/api/Post/\"); // TODO: setup backend to work with this part\n\n        commit('setPosts', response.data);\n    },\n    async addPost({ commit }, {userID, title, content, location, category, groupID}) {\n        //const response = await axios.post('https://jsonplaceholder.typicode.com/posts', { title, body }); // TODO: setup backend to work with this part\n\n        const now = new Date();\n        var time = now.getTime();\n        commit('incrementPostIDs')\n        commit('newPost', {userID, title, content, time, location, category, groupID})\n    },\n    async filterPosts({ commit }, e) {\n        const filterType = e.target.options[e.target.options.selectedIndex].innerText;\n\n        console.log(filterType);\n\n        //const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_filter=${filterType}'); // TODO: setup backend to work with this part\n\n        commit('sortPostsBy', filterType)\n        commit('setPosts', state.posts);\n    }\n};\n\nconst mutations = {\n    setPosts: (state, posts) => (state.posts = posts),\n    newPost: (state, {userID, title, content, time, location, category, groupID}) => {\n        const post = {\n            userId: userID,\n            title: title,\n            id : 1,\n            content: content,\n            time: time,\n            location: location,\n            category: category,\n            groupid: groupID\n        };\n        state.posts.unshift(post);\n    },\n    incrementPostIDs: (state) => {\n        var i = 0;\n        for (i = 0; i < state.posts.length; i++) {\n            state.posts[i].id = state.posts[i].id + 1\n        }\n    },\n    sortPostsBy: (state, filterType) => {\n        switch (filterType) {\n            case 'Time':\n\n                console.log(\"Todo: SORT BY TIME ON SERVER SIDE\")\n\n                break;\n\n            case 'Location':\n\n                console.log(\"Todo: SORT BY LOCATION ON SERVER SIDE\")\n\n                break;\n\n            case 'Category':\n\n                console.log(\"Todo: SORT BY CATEGORY ON SERVER SIDE\")\n\n                break;\n\n            case 'Group/User':\n\n                console.log(\"Todo: SORT BY GROUP/USER ON SERVER SIDE\")\n\n                break;\n        \n            default:\n                break;\n        }\n    }\n};\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};"]}]}