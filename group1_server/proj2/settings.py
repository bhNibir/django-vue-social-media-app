"""
Django settings for proj2 project.

Generated by 'django-admin startproject' using Django 3.0.6.

A normal Python module with module-level variables representing Django settings.
By default, the configuration uses SQLite --PostgreSQL is more scalable, to avoid database-switching issues.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import json
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Adds secutiry enhancements to django
SECRET_KEY = '0m!%gsju#er2873lrogat7ez*g!5+9yf&t*qusqxlzu+n$x%1)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
# Holds the names of all Django applications that are activated in this Django instance.
INSTALLED_APPS = [
    'social_media_app.apps.SocialMediaAppConfig', # path to app configuraion
    'profiles',
    'channels',
    'chat',
    'django.contrib.admin',         # The admin site
    'django.contrib.auth',          # An authentication system
    'django.contrib.contenttypes',  # A framework for content types
    'django.contrib.sessions',      # A session framework
    'django.contrib.messages',      # A messaging framework
    'django.contrib.staticfiles',   # A framework for managing static files
    'social_media_app',              #add app 
    'webpack_loader',
]
# When adding new apps, run the command: Python manage.py migrate
# This creates any necessary database tables according to the database settings

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'proj2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [(os.path.join(BASE_DIR, 'templates')),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'proj2.wsgi.application'
ASGI_APPLICATION = 'proj2.routing.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
## Uncomment the following to instead of sqlite us postgresql
#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': 'postgres',
#        'USER': 'postgres',
#        'PASSWORD': 'password',
#        "DEFAULT-CHARACTER-SET": 'utf8',
#        'HOST': '',
#        'PORT': 5432,
#    }
#}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# proj2/settings.py
# Channels
#ASGI_APPLICATION = 'proj2.routing.application'
#CHANNEL_LAYERS = {
#    'default': {
#        'BACKEND': 'channels_redis.core.RedisChannelLayer',
#        'CONFIG': {
#            "hosts": [('127.0.0.1', 6379)],
#        },
#    },
#}

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Johannesburg'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static'


#adding assers folder as on of the directories Django should check for static files
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'assets'),
)

#initializing webpack_loader settings, which will dirct the loader to the directory of the assets
WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': '../assets/bundles/',
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack-stats.json'),
    }
}