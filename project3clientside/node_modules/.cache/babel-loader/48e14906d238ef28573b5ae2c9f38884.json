{"remainingRequest":"C:\\Users\\GhostlySteel\\Desktop\\New folder\\project3clientside\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\GhostlySteel\\Desktop\\New folder\\project3clientside\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\GhostlySteel\\Desktop\\New folder\\project3clientside\\src\\store\\modules\\posts.js","dependencies":[{"path":"C:\\Users\\GhostlySteel\\Desktop\\New folder\\project3clientside\\src\\store\\modules\\posts.js","mtime":1590859086872},{"path":"C:\\Users\\GhostlySteel\\Desktop\\New folder\\project3clientside\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590866878528},{"path":"C:\\Users\\GhostlySteel\\Desktop\\New folder\\project3clientside\\node_modules\\babel-loader\\lib\\index.js","mtime":1590866859900},{"path":"C:\\Users\\GhostlySteel\\Desktop\\New folder\\project3clientside\\node_modules\\eslint-loader\\index.js","mtime":1590866959489}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvR2hvc3RseVN0ZWVsL0Rlc2t0b3AvTmV3IGZvbGRlci9wcm9qZWN0M2NsaWVudHNpZGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwp2YXIgc3RhdGUgPSB7CiAgcG9zdHM6IFtdCn07CnZhciBnZXR0ZXJzID0gewogIGFsbFBvc3RzOiBmdW5jdGlvbiBhbGxQb3N0cyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnBvc3RzOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgZmV0Y2hQb3N0czogZnVuY3Rpb24gZmV0Y2hQb3N0cyhfcmVmKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJ2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cz9fbGltaXQ9NScpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAvLyBUT0RPOiBzZXR1cCBiYWNrZW5kIHRvIHdvcmsgd2l0aCB0aGlzIHBhcnQKICAgICAgICAgICAgICBjb21taXQoJ3NldFBvc3RzJywgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBhZGRQb3N0OiBmdW5jdGlvbiBhZGRQb3N0KF9yZWYyLCBfcmVmMykgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIHVzZXJJRCwgdGl0bGUsIGJvZHksIGxvY2F0aW9uLCBjYXRlZ29yeSwgZ3JvdXBJRCwgbm93LCB0aW1lOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICB1c2VySUQgPSBfcmVmMy51c2VySUQsIHRpdGxlID0gX3JlZjMudGl0bGUsIGJvZHkgPSBfcmVmMy5ib2R5LCBsb2NhdGlvbiA9IF9yZWYzLmxvY2F0aW9uLCBjYXRlZ29yeSA9IF9yZWYzLmNhdGVnb3J5LCBncm91cElEID0gX3JlZjMuZ3JvdXBJRDsKICAgICAgICAgICAgICAvL2NvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCgnaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3Bvc3RzJywgeyB0aXRsZSwgYm9keSB9KTsgLy8gVE9ETzogc2V0dXAgYmFja2VuZCB0byB3b3JrIHdpdGggdGhpcyBwYXJ0CiAgICAgICAgICAgICAgbm93ID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgICB0aW1lID0gbm93LmdldFRpbWUoKTsKICAgICAgICAgICAgICBjb21taXQoJ2luY3JlbWVudFBvc3RJRHMnKTsKICAgICAgICAgICAgICBjb21taXQoJ25ld1Bvc3QnLCB7CiAgICAgICAgICAgICAgICB1c2VySUQ6IHVzZXJJRCwKICAgICAgICAgICAgICAgIHRpdGxlOiB0aXRsZSwKICAgICAgICAgICAgICAgIGJvZHk6IGJvZHksCiAgICAgICAgICAgICAgICB0aW1lOiB0aW1lLAogICAgICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLAogICAgICAgICAgICAgICAgY2F0ZWdvcnk6IGNhdGVnb3J5LAogICAgICAgICAgICAgICAgZ3JvdXBJRDogZ3JvdXBJRAogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfSwKICBmaWx0ZXJQb3N0czogZnVuY3Rpb24gZmlsdGVyUG9zdHMoX3JlZjQsIGUpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0LCBmaWx0ZXJUeXBlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgICBmaWx0ZXJUeXBlID0gZS50YXJnZXQub3B0aW9uc1tlLnRhcmdldC5vcHRpb25zLnNlbGVjdGVkSW5kZXhdLmlubmVyVGV4dDsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhmaWx0ZXJUeXBlKTsgLy9jb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3Bvc3RzP19maWx0ZXI9JHtmaWx0ZXJUeXBlfScpOyAvLyBUT0RPOiBzZXR1cCBiYWNrZW5kIHRvIHdvcmsgd2l0aCB0aGlzIHBhcnQKCiAgICAgICAgICAgICAgY29tbWl0KCdzb3J0UG9zdHNCeScsIGZpbHRlclR5cGUpOwogICAgICAgICAgICAgIGNvbW1pdCgnc2V0UG9zdHMnLCBzdGF0ZS5wb3N0cyk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgc2V0UG9zdHM6IGZ1bmN0aW9uIHNldFBvc3RzKHN0YXRlLCBwb3N0cykgewogICAgcmV0dXJuIHN0YXRlLnBvc3RzID0gcG9zdHM7CiAgfSwKICBuZXdQb3N0OiBmdW5jdGlvbiBuZXdQb3N0KHN0YXRlLCBfcmVmNSkgewogICAgdmFyIHVzZXJJRCA9IF9yZWY1LnVzZXJJRCwKICAgICAgICB0aXRsZSA9IF9yZWY1LnRpdGxlLAogICAgICAgIGJvZHkgPSBfcmVmNS5ib2R5LAogICAgICAgIHRpbWUgPSBfcmVmNS50aW1lLAogICAgICAgIGxvY2F0aW9uID0gX3JlZjUubG9jYXRpb24sCiAgICAgICAgY2F0ZWdvcnkgPSBfcmVmNS5jYXRlZ29yeSwKICAgICAgICBncm91cElEID0gX3JlZjUuZ3JvdXBJRDsKICAgIHZhciBwb3N0ID0gewogICAgICB1c2VySWQ6IHVzZXJJRCwKICAgICAgdGl0bGU6IHRpdGxlLAogICAgICBpZDogMSwKICAgICAgYm9keTogYm9keSwKICAgICAgdGltZTogdGltZSwKICAgICAgbG9jYXRpb246IGxvY2F0aW9uLAogICAgICBjYXRlZ29yeTogY2F0ZWdvcnksCiAgICAgIGdyb3VwaWQ6IGdyb3VwSUQKICAgIH07CiAgICBzdGF0ZS5wb3N0cy51bnNoaWZ0KHBvc3QpOwogIH0sCiAgaW5jcmVtZW50UG9zdElEczogZnVuY3Rpb24gaW5jcmVtZW50UG9zdElEcyhzdGF0ZSkgewogICAgdmFyIGkgPSAwOwoKICAgIGZvciAoaSA9IDA7IGkgPCBzdGF0ZS5wb3N0cy5sZW5ndGg7IGkrKykgewogICAgICBzdGF0ZS5wb3N0c1tpXS5pZCA9IHN0YXRlLnBvc3RzW2ldLmlkICsgMTsKICAgIH0KICB9LAogIHNvcnRQb3N0c0J5OiBmdW5jdGlvbiBzb3J0UG9zdHNCeShzdGF0ZSwgZmlsdGVyVHlwZSkgewogICAgc3dpdGNoIChmaWx0ZXJUeXBlKSB7CiAgICAgIGNhc2UgJ1RpbWUnOgogICAgICAgIGNvbnNvbGUubG9nKCJUb2RvOiBTT1JUIEJZIFRJTUUgT04gU0VSVkVSIFNJREUiKTsKICAgICAgICBicmVhazsKCiAgICAgIGNhc2UgJ0xvY2F0aW9uJzoKICAgICAgICBjb25zb2xlLmxvZygiVG9kbzogU09SVCBCWSBMT0NBVElPTiBPTiBTRVJWRVIgU0lERSIpOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSAnQ2F0ZWdvcnknOgogICAgICAgIGNvbnNvbGUubG9nKCJUb2RvOiBTT1JUIEJZIENBVEVHT1JZIE9OIFNFUlZFUiBTSURFIik7CiAgICAgICAgYnJlYWs7CgogICAgICBjYXNlICdHcm91cC9Vc2VyJzoKICAgICAgICBjb25zb2xlLmxvZygiVG9kbzogU09SVCBCWSBHUk9VUC9VU0VSIE9OIFNFUlZFUiBTSURFIik7CiAgICAgICAgYnJlYWs7CgogICAgICBkZWZhdWx0OgogICAgICAgIGJyZWFrOwogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["C:/Users/GhostlySteel/Desktop/New folder/project3clientside/src/store/modules/posts.js"],"names":["axios","state","posts","getters","allPosts","actions","fetchPosts","commit","get","response","data","addPost","userID","title","body","location","category","groupID","now","Date","time","getTime","filterPosts","e","filterType","target","options","selectedIndex","innerText","console","log","mutations","setPosts","newPost","post","userId","id","groupid","unshift","incrementPostIDs","i","length","sortPostsBy"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst state = {\r\n    posts: []\r\n};\r\n\r\nconst getters = {\r\n    allPosts: (state) => state.posts\r\n};\r\n\r\nconst actions = {\r\n    async fetchPosts({ commit }) {\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=5'); // TODO: setup backend to work with this part\r\n\r\n        commit('setPosts', response.data);\r\n    },\r\n    async addPost({ commit }, {userID, title, body, location, category, groupID}) {\r\n        //const response = await axios.post('https://jsonplaceholder.typicode.com/posts', { title, body }); // TODO: setup backend to work with this part\r\n\r\n        const now = new Date();\r\n        var time = now.getTime();\r\n        commit('incrementPostIDs')\r\n        commit('newPost', {userID, title, body, time, location, category, groupID})\r\n    },\r\n    async filterPosts({ commit }, e) {\r\n        const filterType = e.target.options[e.target.options.selectedIndex].innerText;\r\n\r\n        console.log(filterType);\r\n\r\n        //const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_filter=${filterType}'); // TODO: setup backend to work with this part\r\n\r\n        commit('sortPostsBy', filterType)\r\n        commit('setPosts', state.posts);\r\n    }\r\n};\r\n\r\nconst mutations = {\r\n    setPosts: (state, posts) => (state.posts = posts),\r\n    newPost: (state, {userID, title, body, time, location, category, groupID}) => {\r\n        const post = {\r\n            userId: userID,\r\n            title: title,\r\n            id : 1,\r\n            body: body,\r\n            time: time,\r\n            location: location,\r\n            category: category,\r\n            groupid: groupID\r\n        };\r\n        state.posts.unshift(post);\r\n    },\r\n    incrementPostIDs: (state) => {\r\n        var i = 0;\r\n        for (i = 0; i < state.posts.length; i++) {\r\n            state.posts[i].id = state.posts[i].id + 1\r\n        }\r\n    },\r\n    sortPostsBy: (state, filterType) => {\r\n        switch (filterType) {\r\n            case 'Time':\r\n\r\n                console.log(\"Todo: SORT BY TIME ON SERVER SIDE\")\r\n\r\n                break;\r\n\r\n            case 'Location':\r\n\r\n                console.log(\"Todo: SORT BY LOCATION ON SERVER SIDE\")\r\n\r\n                break;\r\n\r\n            case 'Category':\r\n\r\n                console.log(\"Todo: SORT BY CATEGORY ON SERVER SIDE\")\r\n\r\n                break;\r\n\r\n            case 'Group/User':\r\n\r\n                console.log(\"Todo: SORT BY GROUP/USER ON SERVER SIDE\")\r\n\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n};\r\n\r\nexport default {\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n};"]}]}